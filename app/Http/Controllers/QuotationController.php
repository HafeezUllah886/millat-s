<?php
 namespace App\Http\Controllers; use App\Models\products; use App\Models\quotation; use App\Models\quotationDetails; use Exception; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class QuotationController extends Controller { public function index() { $quotations = quotation::orderBy("\x69\144", "\x64\x65\x73\x63")->get(); return view("\x71\x75\157\164\x61\164\x69\x6f\156\x2e\x69\156\x64\145\x78", compact("\161\165\157\164\x61\164\x69\x6f\156\x73")); } public function create() { $products = products::orderby("\156\x61\x6d\145", "\x61\x73\x63")->get(); return view("\x71\x75\x6f\x74\141\x74\151\157\x6e\56\x63\x72\145\x61\x74\145", compact("\160\x72\157\x64\x75\143\x74\163")); } public function store(Request $request) { try { if ($request->isNotFilled("\151\x64")) { throw new Exception("\120\154\145\x61\163\x65\40\123\145\154\x65\143\164\40\101\164\x6c\145\141\163\x74\x20\x4f\x6e\x65\x20\120\162\157\x64\165\143\x74"); } DB::beginTransaction(); $quot = quotation::create(array("\x63\165\163\x74\x6f\155\x65\x72\x4e\x61\x6d\145" => $request->customer, "\x63\165\163\164\157\x6d\145\162\x41\x64\144\162\x65\163\x73" => $request->address, "\156\157\x74\x65\x73" => $request->notes, "\x64\x69\163\x63\157\165\x6e\164" => $request->discount, "\144\143" => $request->dc, "\144\141\x74\145" => $request->date, "\x76\141\x6c\x69\x64\124\151\154\154" => $request->valid)); $ids = $request->id; $total = 0; foreach ($ids as $key => $id) { $qty = $request->qty[$key]; $price = $request->price[$key]; $total += $request->amount[$key]; quotationDetails::create(array("\x71\x75\x6f\164\111\x44" => $quot->id, "\x70\162\157\144\165\143\164\111\x44" => $id, "\160\x72\151\x63\x65" => $price, "\161\x74\x79" => $qty, "\x61\155\157\x75\156\x74" => $request->amount[$key])); } $discount = $request->discount; $dc = $request->dc; $net = $total + $dc - $discount; $quot->update(array("\164\x6f\x74\x61\154" => $net)); DB::commit(); return to_route("\x71\x75\x6f\x74\x61\x74\x69\x6f\x6e\x2e\163\x68\x6f\167", $quot->id)->with("\163\165\x63\143\145\163\x73", "\x51\165\x6f\x74\x61\164\x69\x6f\156\x20\x43\162\145\x61\x74\x65\x64"); } catch (\Exception $e) { DB::rollback(); return back()->with("\145\162\x72\157\162", $e->getMessage()); } } public function show($id) { $quot = quotation::find($id); return view("\161\x75\x6f\x74\x61\x74\151\157\156\56\166\151\x65\167", compact("\161\165\x6f\x74")); } public function edit(quotation $quotation) { } public function update(Request $request, quotation $quotation) { } public function destroy($id) { try { DB::beginTransaction(); $quot = quotation::find($id); foreach ($quot->details as $product) { $product->delete(); } $quot->delete(); DB::commit(); session()->forget("\x63\157\x6e\146\x69\x72\x6d\145\x64\x5f\x70\x61\163\x73\167\x6f\x72\x64"); return to_route("\161\x75\x6f\164\x61\x74\x69\157\x6e\56\x69\156\144\x65\x78")->with("\163\165\143\x63\145\x73\163", "\x51\x75\x6f\164\x61\x74\x69\x6f\x6e\x20\x44\145\154\x65\x74\145\x64"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\x63\157\156\146\x69\x72\155\x65\x64\x5f\160\141\163\x73\x77\157\x72\144"); return to_route("\x71\165\x6f\x74\x61\164\x69\x6f\156\56\151\x6e\x64\145\x78")->with("\x65\x72\162\157\x72", $e->getMessage()); } } }
