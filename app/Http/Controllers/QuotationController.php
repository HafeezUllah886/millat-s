<?php
 namespace App\Http\Controllers; use App\Models\categories; use App\Models\products; use App\Models\quotation; use App\Models\quotationDetails; use Exception; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class QuotationController extends Controller { public function index() { $quotations = quotation::orderBy("\151\x64", "\144\145\x73\143")->get(); return view("\161\x75\157\x74\x61\x74\151\157\156\x2e\151\x6e\144\145\170", compact("\x71\165\x6f\x74\x61\x74\x69\157\156\163")); } public function create() { $products = products::orderby("\x6e\141\x6d\145", "\141\163\143")->get(); $cats = categories::orderBy("\x6e\x61\x6d\x65", "\x61\163\143")->get(); return view("\x71\x75\x6f\x74\x61\164\151\157\156\x2e\x63\x72\x65\x61\164\145", compact("\160\162\x6f\144\165\x63\x74\163", "\x63\x61\x74\x73")); } public function store(Request $request) { try { if ($request->isNotFilled("\x69\144")) { throw new Exception("\120\x6c\145\141\163\145\40\x53\x65\x6c\145\x63\x74\40\x41\x74\x6c\145\141\x73\x74\40\117\156\145\40\120\162\x6f\144\165\x63\164"); } DB::beginTransaction(); $quot = quotation::create(array("\143\x75\163\x74\x6f\155\145\x72\116\x61\x6d\x65" => $request->customer, "\143\165\x73\164\x6f\155\x65\162\101\144\144\x72\145\x73\163" => $request->address, "\x6e\x6f\x74\x65\163" => $request->notes, "\x64\x69\163\143\157\x75\156\164" => $request->discount, "\x64\143" => $request->dc, "\x64\x61\164\145" => $request->date, "\x76\141\154\151\x64\124\151\x6c\x6c" => $request->valid)); $ids = $request->id; $total = 0; foreach ($ids as $key => $id) { if ($request->amount[$key] > 0) { $qty = $request->qty[$key]; $price = $request->price[$key]; $total += $request->amount[$key]; quotationDetails::create(array("\x71\165\157\164\111\x44" => $quot->id, "\x70\x72\x6f\144\165\x63\164\x49\x44" => $id, "\x70\x72\151\143\145" => $price, "\x71\x74\x79" => $qty, "\141\x6d\x6f\x75\x6e\x74" => $request->amount[$key])); } } $discount = $request->discount; $dc = $request->dc; $net = $total + $dc - $discount; $quot->update(array("\164\157\164\141\154" => $net)); DB::commit(); return to_route("\x71\x75\x6f\164\141\x74\x69\x6f\x6e\x2e\163\150\x6f\x77", $quot->id)->with("\x73\x75\x63\143\145\x73\x73", "\x51\165\x6f\164\141\164\151\x6f\156\x20\103\x72\145\x61\x74\145\144"); } catch (\Exception $e) { DB::rollback(); return back()->with("\145\x72\162\x6f\162", $e->getMessage()); } } public function show($id) { $quot = quotation::find($id); return view("\x71\165\157\x74\141\164\x69\x6f\156\x2e\x76\x69\145\x77", compact("\x71\165\157\164")); } public function edit(quotation $quotation) { } public function update(Request $request, quotation $quotation) { } public function destroy($id) { try { DB::beginTransaction(); $quot = quotation::find($id); foreach ($quot->details as $product) { $product->delete(); } $quot->delete(); DB::commit(); session()->forget("\x63\x6f\156\146\151\x72\x6d\x65\x64\137\160\141\x73\x73\167\x6f\x72\144"); return to_route("\161\x75\157\x74\x61\164\151\x6f\156\56\151\x6e\144\145\x78")->with("\163\165\143\x63\x65\163\x73", "\121\x75\157\x74\x61\164\x69\157\x6e\40\x44\x65\154\145\164\145\x64"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\x63\157\156\146\x69\162\155\x65\x64\x5f\160\141\x73\163\x77\157\162\x64"); return to_route("\x71\165\157\164\x61\164\151\157\156\56\151\x6e\x64\x65\x78")->with("\145\162\162\157\x72", $e->getMessage()); } } }