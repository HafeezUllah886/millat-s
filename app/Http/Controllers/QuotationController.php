<?php
 namespace App\Http\Controllers; use App\Models\categories; use App\Models\products; use App\Models\quotation; use App\Models\quotationDetails; use Exception; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class QuotationController extends Controller { public function index() { $quotations = quotation::orderBy("\151\144", "\x64\x65\x73\x63")->get(); return view("\x71\x75\157\164\141\164\151\x6f\156\x2e\x69\x6e\x64\x65\170", compact("\x71\165\157\x74\141\x74\151\157\156\163")); } public function create() { $products = products::orderby("\x6e\x61\155\145", "\x61\163\143")->get(); $cats = categories::orderBy("\156\141\x6d\x65", "\x61\163\x63")->get(); return view("\161\x75\157\x74\x61\x74\151\157\x6e\x2e\143\x72\145\141\x74\145", compact("\x70\x72\157\x64\165\143\164\163", "\143\x61\164\x73")); } public function store(Request $request) { try { if ($request->isNotFilled("\x69\144")) { throw new Exception("\x50\154\x65\x61\163\x65\x20\123\145\154\145\x63\x74\40\x41\x74\154\x65\x61\x73\164\40\117\x6e\x65\x20\x50\x72\x6f\x64\165\x63\164"); } DB::beginTransaction(); $quot = quotation::create(array("\143\165\163\164\x6f\155\145\x72\116\x61\155\x65" => $request->customer, "\x63\x75\163\164\157\155\145\x72\101\x64\x64\x72\x65\163\x73" => $request->address, "\x6e\157\164\x65\x73" => $request->notes, "\x64\151\163\x63\157\165\x6e\164" => $request->discount, "\144\x63" => $request->dc, "\x64\x61\x74\x65" => $request->date, "\x76\x61\x6c\151\x64\124\151\154\154" => $request->valid)); $ids = $request->id; $total = 0; foreach ($ids as $key => $id) { $qty = $request->qty[$key]; $price = $request->price[$key]; $total += $request->amount[$key]; quotationDetails::create(array("\161\x75\x6f\x74\111\x44" => $quot->id, "\160\x72\x6f\x64\165\x63\164\x49\x44" => $id, "\160\x72\151\x63\145" => $price, "\161\164\171" => $qty, "\x61\155\157\165\x6e\164" => $request->amount[$key])); } $discount = $request->discount; $dc = $request->dc; $net = $total + $dc - $discount; $quot->update(array("\x74\157\x74\141\154" => $net)); DB::commit(); return to_route("\161\165\157\164\141\164\151\x6f\156\x2e\x73\x68\157\x77", $quot->id)->with("\163\x75\143\x63\145\163\163", "\x51\x75\x6f\164\x61\164\151\x6f\x6e\40\x43\162\145\141\164\145\144"); } catch (\Exception $e) { DB::rollback(); return back()->with("\x65\162\162\x6f\x72", $e->getMessage()); } } public function show($id) { $quot = quotation::find($id); return view("\x71\165\x6f\164\x61\x74\151\x6f\x6e\x2e\166\x69\145\x77", compact("\161\x75\x6f\164")); } public function edit(quotation $quotation) { } public function update(Request $request, quotation $quotation) { } public function destroy($id) { try { DB::beginTransaction(); $quot = quotation::find($id); foreach ($quot->details as $product) { $product->delete(); } $quot->delete(); DB::commit(); session()->forget("\143\157\x6e\146\151\x72\x6d\x65\x64\x5f\160\141\x73\x73\x77\157\162\144"); return to_route("\161\165\157\164\x61\164\151\x6f\x6e\56\x69\x6e\x64\x65\170")->with("\163\x75\143\143\145\163\x73", "\x51\x75\x6f\164\x61\164\x69\157\156\40\x44\145\154\x65\164\145\144"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\x63\x6f\156\x66\151\162\x6d\145\144\x5f\x70\141\x73\x73\167\x6f\x72\x64"); return to_route("\161\x75\x6f\164\x61\164\151\x6f\156\x2e\151\156\x64\x65\x78")->with("\x65\162\162\x6f\x72", $e->getMessage()); } } }
