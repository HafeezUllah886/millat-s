<?php
 namespace App\Http\Controllers; use App\Models\accounts; use App\Models\transactions; use App\Models\transfer; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class TransferController extends Controller { public function index() { $transfers = transfer::orderby("\x69\144", "\x64\x65\x73\143")->get(); $accounts = accounts::where("\x74\171\160\145", "\x21\75", "\x43\x75\x73\164\157\155\x65\162")->get(); return view("\106\151\156\141\x6e\143\x65\56\x74\x72\141\156\x73\146\x65\x72\56\x69\156\144\145\x78", compact("\164\162\141\x6e\163\146\x65\x72\163", "\x61\143\143\157\x75\156\164\163")); } public function create() { } public function store(Request $request) { $request->validate(array("\164\x6f" => "\144\151\x66\146\145\x72\x65\156\164\x3a\x66\162\157\155"), array("\x74\x6f\56\x64\151\x66\x66\145\162\145\x6e\x74" => "\106\x72\x6f\x6d\40\x61\156\144\40\124\x6f\x20\101\x63\143\x6f\x75\156\x74\163\40\115\165\163\164\40\x62\x65\40\144\151\146\x66\145\x72\x65\x6e\x74")); try { DB::beginTransaction(); $ref = getRef(); $transfer = transfer::create(array("\146\x72\157\155" => $request->from, "\164\x6f" => $request->to, "\x64\141\164\x65" => $request->date, "\x61\x6d\x6f\165\156\x74" => $request->amount, "\x6e\x6f\x74\145\x73" => $request->notes, "\162\145\146\x49\x44" => $ref)); $fromAccount = $transfer->fromAccount->title; $toAccount = $transfer->toAccount->title; createTransaction($request->from, $request->date, 0, $request->amount, "\124\x72\141\156\x73\146\x65\162\x65\144\40\x74\157\40{$toAccount}", $ref); createTransaction($request->to, $request->date, $request->amount, 0, "\124\162\141\x6e\x73\x66\x65\x72\x65\144\x20\146\x72\x6f\155\x20{$fromAccount}", $ref); DB::commit(); return back()->with("\x73\x75\143\143\x65\163\x73", "\124\x72\x61\156\163\146\x65\162\x65\144\x20\123\x75\x63\x63\x65\163\x73\146\x75\x6c\154\171"); } catch (\Exception $e) { DB::rollBack(); return back()->with("\x65\162\162\x6f\x72", $e->getMessage()); } } public function show(transfer $transfer) { } public function edit(transfer $transfer) { } public function update(Request $request, transfer $transfer) { } public function delete($ref) { try { DB::beginTransaction(); transfer::where("\162\145\146\111\104", $ref)->delete(); transactions::where("\x72\x65\146\111\104", $ref)->delete(); DB::commit(); session()->forget("\143\157\156\146\151\162\155\x65\x64\137\160\x61\163\x73\167\157\x72\x64"); return redirect()->route("\x74\x72\x61\x6e\x73\x66\x65\162\x73\x2e\x69\x6e\144\145\170")->with("\x73\165\143\143\x65\x73\x73", "\x54\162\x61\x6e\x73\146\145\162\x20\x44\145\x6c\145\x74\145\144"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\143\157\156\x66\151\x72\x6d\145\144\x5f\160\141\x73\x73\x77\x6f\162\x64"); return redirect()->route("\x74\162\x61\x6e\163\x66\x65\162\163\56\x69\x6e\x64\x65\170")->with("\x65\162\162\157\x72", $e->getMessage()); } } }
