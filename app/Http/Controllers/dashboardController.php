<?php
 namespace App\Http\Controllers; use App\Models\accounts; use App\Models\expenses; use App\Models\products; use App\Models\purchase_details; use App\Models\sale_details; use App\Models\sales; use Carbon\Carbon; use Illuminate\Container\Attributes\DB; use Illuminate\Http\Request; class dashboardController extends Controller { public function index() { $months = array(); for ($i = 0; $i < 12; $i++) { $date = Carbon::now()->subMonths($i); $firstDay = $date->copy()->firstOfMonth()->toDateString(); $lastDay = $date->copy()->lastOfMonth()->toDateString(); $monthName = $date->format("\115"); $months[] = array("\x66\151\162\163\164" => $firstDay, "\154\141\163\x74" => $lastDay, "\156\141\x6d\x65" => $monthName); } $months = array_reverse($months); $sales = array(); $monthNames = array(); $expenses = array(); $products = products::all(); $profits = array(); $last_sale = 0; $last_expense = 0; $last_profit = 0; foreach ($months as $key => $month) { $first = $month["\x66\151\162\163\164"]; $last = $month["\x6c\141\x73\164"]; $sale = sales::whereBetween("\x64\x61\164\x65", array($first, $last))->count(); $expense = expenses::whereBetween("\x64\x61\164\x65", array($first, $last))->sum("\x61\155\157\x75\156\x74"); $sales[] = $sale; $expenses[] = $expense; $monthNames[] = $month["\156\141\x6d\x65"]; $profit = 0; foreach ($products as $product) { $purchases = purchase_details::where("\x70\x72\157\x64\x75\x63\x74\111\x44", $product->id)->whereBetween("\144\141\164\145", array($first, $last)); $purchases_amount = $purchases->sum("\141\x6d\157\165\x6e\164"); $purchases_qty = $purchases->sum("\161\x74\171"); $purchase_qty = $purchases_qty; if ($purchase_qty > 0) { $purchase_price = $purchases_amount / $purchase_qty; } else { $purchase_price = 0; } $sales1 = sale_details::where("\x70\162\157\144\165\x63\x74\111\104", $product->id)->whereBetween("\144\x61\164\145", array($first, $last)); $sales_amount = $sales1->sum("\x61\155\x6f\x75\x6e\164"); $sales_qty = $sales1->sum("\161\x74\171"); if ($sales_qty > 0) { $sale_price = $sales_amount / $sales_qty; } else { $sale_price = 0; } $ppi = $sale_price - $purchase_price; $ppp = $ppi * $sales_qty; $profit += $ppp; } $profits[] = $profit - $expense; $last_sale = $sale; $last_expense = $expense; $last_profit = $profit; } $topProducts = products::withSum("\163\x61\154\145\x44\145\x74\141\x69\154\163", "\161\x74\x79")->withSum("\x73\141\154\x65\104\x65\164\141\x69\154\163", "\x61\x6d\157\x75\x6e\164")->orderByDesc("\163\141\x6c\x65\137\x64\x65\164\x61\151\x6c\163\137\x73\x75\155\x5f\161\x74\x79")->take(5)->get(); $topProductsArray = array(); foreach ($topProducts as $product) { $stock = getStock($product->id); $price = avgSalePrice("\x61\154\154", "\141\x6c\154", $product->id); $topProductsArray[] = array("\156\141\155\x65" => $product->name, "\x70\162\x69\x63\x65" => $price, "\x73\x74\157\143\153" => $stock, "\141\155\x6f\165\156\164" => $product->sale_details_sum_amount, "\x73\x6f\x6c\144" => $product->sale_details_sum_qty); } $topCustomers = accounts::where("\x74\171\x70\145", "\103\165\163\164\x6f\155\x65\x72")->withSum("\163\x61\x6c\x65", "\x74\157\164\141\154")->orderByDesc("\163\141\x6c\x65\137\163\165\155\x5f\164\157\164\141\154")->take(5)->get(); $topCustomersArray = array(); foreach ($topCustomers as $customer) { if ($customer->id != 2) { $balance = getAccountBalance($customer->id); $customer_purchases = $customer->sale_sum_net; $topCustomersArray[] = array("\x6e\141\x6d\x65" => $customer->title, "\x70\165\x72\x63\x68\141\x73\145\163" => $customer_purchases, "\x62\x61\x6c\141\156\143\145" => $balance); } } return view("\144\x61\x73\x68\x62\157\x61\162\144\56\151\156\x64\145\x78", compact("\x73\x61\x6c\145\163", "\155\x6f\156\164\x68\x4e\141\x6d\145\163", "\x65\170\160\145\156\x73\x65\163", "\x70\x72\x6f\x66\x69\x74\163", "\154\141\163\x74\x5f\x73\141\154\145", "\154\x61\x73\164\x5f\x65\170\x70\x65\x6e\163\145", "\x6c\141\x73\164\137\160\x72\157\x66\151\164", "\x74\x6f\160\x50\x72\x6f\x64\x75\x63\x74\x73\x41\162\162\141\171", "\164\x6f\x70\103\165\163\164\x6f\155\x65\162\x73\x41\x72\x72\141\171")); } }
